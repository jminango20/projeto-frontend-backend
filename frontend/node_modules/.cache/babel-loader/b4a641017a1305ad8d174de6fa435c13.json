{"ast":null,"code":"var _jsxFileName = \"/home/juan/Workspaces/ws-devsuperior/projeto-sds3/frontend/src/components/BarChart/index.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport Chart from 'react-apexcharts';\nimport { round } from 'utils/format';\nimport { BASE_URL } from 'utils/requests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BarChart = () => {\n  _s();\n\n  const [charData, setChartData] = useState({\n    labels: {\n      categories: []\n    },\n    series: [{\n      name: \"\",\n      data: []\n    }]\n  });\n  useEffect(() => {\n    axios.get(`${BASE_URL}/sales/success-by-seller`).then(response => {\n      const data = response.data;\n      const myLabels = data.map(x => x.sellerName);\n      const mySeries = data.map(x => round(100.0 * x.deals / x.visited, 1));\n      setChartData({\n        labels: {\n          categories: myLabels\n        },\n        series: [{\n          name: \"% Successo\",\n          data: mySeries\n        }]\n      });\n    });\n  }, []);\n  const options = {\n    plotOptions: {\n      bar: {\n        horizontal: true\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    options: { ...options,\n      xaxis: charData.labels\n    },\n    series: charData.series,\n    type: \"bar\",\n    height: \"240\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BarChart, \"02oKiN6Kx5mG3pqxgvy33rGo2Lw=\");\n\n_c = BarChart;\nexport default BarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"sources":["/home/juan/Workspaces/ws-devsuperior/projeto-sds3/frontend/src/components/BarChart/index.tsx"],"names":["axios","useEffect","useState","Chart","round","BASE_URL","BarChart","charData","setChartData","labels","categories","series","name","data","get","then","response","myLabels","map","x","sellerName","mySeries","deals","visited","options","plotOptions","bar","horizontal","xaxis"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,QAAT,QAAyB,gBAAzB;;;AAeA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAM,CAACC,QAAD,EAAWC,YAAX,IAA2BN,QAAQ,CAAY;AACjDO,IAAAA,MAAM,EAAE;AACJC,MAAAA,UAAU,EAAE;AADR,KADyC;AAIjDC,IAAAA,MAAM,EAAE,CACJ;AACIC,MAAAA,IAAI,EAAE,EADV;AAEIC,MAAAA,IAAI,EAAE;AAFV,KADI;AAJyC,GAAZ,CAAzC;AAYAZ,EAAAA,SAAS,CAAC,MAAM;AACZD,IAAAA,KAAK,CAACc,GAAN,CAAW,GAAET,QAAS,0BAAtB,EACCU,IADD,CACMC,QAAQ,IAAI;AACd,YAAMH,IAAI,GAAGG,QAAQ,CAACH,IAAtB;AACA,YAAMI,QAAQ,GAAGJ,IAAI,CAACK,GAAL,CAASC,CAAC,IAAIA,CAAC,CAACC,UAAhB,CAAjB;AACA,YAAMC,QAAQ,GAAGR,IAAI,CAACK,GAAL,CAASC,CAAC,IAAIf,KAAK,CAAC,QAAQe,CAAC,CAACG,KAAV,GAAgBH,CAAC,CAACI,OAAnB,EAA2B,CAA3B,CAAnB,CAAjB;AAEAf,MAAAA,YAAY,CAAC;AACTC,QAAAA,MAAM,EAAE;AACJC,UAAAA,UAAU,EAAEO;AADR,SADC;AAITN,QAAAA,MAAM,EAAE,CACJ;AACIC,UAAAA,IAAI,EAAE,YADV;AAEIC,UAAAA,IAAI,EAAEQ;AAFV,SADI;AAJC,OAAD,CAAZ;AAWH,KAjBD;AAkBH,GAnBQ,EAmBN,EAnBM,CAAT;AAsBA,QAAMG,OAAO,GAAG;AACZC,IAAAA,WAAW,EAAE;AACTC,MAAAA,GAAG,EAAE;AACDC,QAAAA,UAAU,EAAE;AADX;AADI;AADD,GAAhB;AASA,sBACI,QAAC,KAAD;AACI,IAAA,OAAO,EAAE,EAAC,GAAGH,OAAJ;AAAaI,MAAAA,KAAK,EAAErB,QAAQ,CAACE;AAA7B,KADb;AAEI,IAAA,MAAM,EAAEF,QAAQ,CAACI,MAFrB;AAGI,IAAA,IAAI,EAAC,KAHT;AAII,IAAA,MAAM,EAAC;AAJX;AAAA;AAAA;AAAA;AAAA,UADJ;AASD,CAtDH;;GAAML,Q;;KAAAA,Q;AAwDJ,eAAeA,QAAf","sourcesContent":["import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport Chart from 'react-apexcharts';\nimport { SaleSuccess } from 'types/sale';\nimport { round } from 'utils/format';\nimport { BASE_URL } from 'utils/requests';\n\ntype SeriesData = {\n    name: string;\n    data: number[];\n}\n\ntype ChartData = {\n    labels: {\n        categories: String[];\n\n    };\n    series: SeriesData[];  \n}\n\nconst BarChart = () => {\n\n    const [charData, setChartData] = useState<ChartData>({\n        labels: {\n            categories: []\n        },\n        series: [\n            {\n                name: \"\",\n                data: []                   \n            }\n        ]\n    })\n\n    useEffect(() => {\n        axios.get(`${BASE_URL}/sales/success-by-seller`)\n        .then(response => {\n            const data = response.data as SaleSuccess[];\n            const myLabels = data.map(x => x.sellerName);\n            const mySeries = data.map(x => round(100.0 * x.deals/x.visited,1));\n\n            setChartData({\n                labels: {\n                    categories: myLabels\n                },\n                series: [\n                    {\n                        name: \"% Successo\",\n                        data: mySeries                   \n                    }\n                ]\n            });\n        });\n    }, []);\n\n\n    const options = {\n        plotOptions: {\n            bar: {\n                horizontal: true,\n            }\n        },\n    };\n    \n    \n    return (\n        <Chart \n            options={{...options, xaxis: charData.labels}}\n            series={charData.series}\n            type=\"bar\"\n            height=\"240\"\n        />\n\n    );\n  }\n  \n  export default BarChart;\n  "]},"metadata":{},"sourceType":"module"}